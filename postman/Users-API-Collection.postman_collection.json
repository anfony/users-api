{
	"info": {
		"_postman_id": "users-api-collection-2024",
		"name": "Users API Collection",
		"description": "Colección completa para probar la API de usuarios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users CRUD",
			"item": [
				{
					"name": "1. Obtener todos los usuarios",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
                {
                "name": "2. Obtener usuarios con filtro",
                "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                    "raw": "{{base_url}}/users?filter=name%2Bco%2Bjuan",
                    "host": [
                        "{{base_url}}"
                    ],
                    "path": [
                        "users"
                    ],
                    "query": [
                        {
                        "key": "filter",
                        "value": "name%2Bco%2Bjuan",
                        "description": "EJEMPLOS DE FILTROS (URL-encodeados):\n• name%2Bco%2Bjuan (contiene juan)\n• email%2Bsw%2Btest (empieza con test)\n• phone%2Bco%2B55 (contiene 55)\n• tax_id%2Beq%2BPEGJ890123ABC (RFC exacto)\n• name%2Bew%2Bgarc%C3%ADa (termina con garcía)"
                        }
                    ]
                    }
                },
                "response": []
                },
				{
					"name": "3. Obtener usuarios ordenados",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?sortedBy=name",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "sortedBy",
									"value": "name",
									"description": "Campos disponibles: email, id, name, phone, tax_id, created_at"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Obtener usuario por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Crear nuevo usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('user_id', responseJson.id);",
									"    console.log('Usuario creado con ID: ' + responseJson.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}\",\n    \"name\": \"{{test_name}}\",\n    \"phone\": \"{{test_phone}}\",\n    \"taxId\": \"{{test_tax_id}}\",\n    \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Actualizar usuario (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Juan Pérez Actualizado\",\n    \"phone\": \"5512345679\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Eliminar usuario",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    console.log('Login exitoso para usuario: ' + responseJson.user.name);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{test_tax_id}}\",\n    \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Cases",
			"item": [
				{
					"name": "Crear usuario con RFC inválido",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"name\": \"Test User\",\n    \"phone\": \"5512345678\",\n    \"taxId\": \"RFC_INVALIDO\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear usuario con teléfono inválido",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test2@example.com\",\n    \"name\": \"Test User 2\",\n    \"phone\": \"123\",\n    \"taxId\": \"TEST890123ABC\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login con credenciales incorrectas",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"NOEXISTE123ABC\",\n    \"password\": \"password_incorrecto\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuario que no existe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}